@page "/"

@if (SelectedArticle != null)
{
    <h4>@SelectedArticle.Article.Title</h4>

    <aside>
        <small>@SelectedArticle.Article.Published</small>
    </aside>

    <ul>
        @foreach (var page in SelectedArticle.Article.Pages)
        {
            <li>
                @switch (page.Type)
                {
                    case Abstractions.ArticleType.Text:
                        <p>
                            @(page.Content)
                        </p>
                        break;
                    case Abstractions.ArticleType.Image:
                        <img src="@(page.Content)" />
                        break;
                    default:
                        break;
                }
            </li>
        }
    </ul>
}
else if (SelectedFeed != null)
{
    <div class="input-group">
        <UnreadDropdown @bind-Unread="_unread" />

        <div class="input-group-append">
            <button class="btn btn-primary"
                    @onclick="HandleRefreshArticlesAsync"
                    @onclick:preventDefault
                    @onclick:stopPropagation>
                Refresh
            </button>
        </div>
    </div>

    if (_articles != null)
    {
        <ul class="articles">
            @foreach (var article in _articles)
            {
                <li class="article @(article.UserStats?.ReadCount > 0 ? "read" : "unread")"
                    @onclick="() => HandleArticleSelectedAsync(article)"
                    @onclick:preventDefault
                    @onclick:stopPropagation>
                    @article.Article.Title
                </li>
            }
        </ul>
    }
}
else if (SelectedSource != null)
{
}
