@page "/"

@if (SelectedArticle != null)
{
    <h4>@SelectedArticle.Article.Title</h4>

    <aside>
        <small>@SelectedArticle.Article.Published</small>
    </aside>

    <div class="pages">
        @foreach (var page in SelectedArticle.Article.Pages)
        {
            <div class="page">
                @switch (page.Type)
                {
                    case Abstractions.ArticleType.Text:
                        <p>@(page.Content)</p>
                        break;
                    case Abstractions.ArticleType.Image:
                        <img src="@(page.Content)" class="d-block" />
                        break;
                    default:
                        break;
                }
            </div>
        }
    </div>
}
else if (SelectedFeed != null)
{
    <div class="input-group">
        <UnreadDropdown @bind-Unread="_unread" />

        <button type="button" class="btn btn-primary"
            @onclick="HandleRefreshArticlesAsync"
            @onclick:preventDefault
            @onclick:stopPropagation>
            Refresh
        </button>
    </div>

    <hr />

    if (_articles != null)
    {
        <div class="list-group articles">
            @foreach (var article in _articles)
            {
                <a href="#" class="list-group-item list-group-item-action article @(article.UserStats?.ReadCount > 0 ? "read" : "unread")"
       @onclick="() => HandleArticleSelectedAsync(article)"
       @onclick:preventDefault
       @onclick:stopPropagation>
                    @article.Article.Title
                </a>
            }
        </div>
    }
}
else if (SelectedSource != null)
{
}
